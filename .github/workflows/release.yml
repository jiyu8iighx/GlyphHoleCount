name: Release Binaries

on:
  workflow_dispatch:  # This allows the workflow to be manually triggered

permissions:
  contents: write  # Grant permission to write to repository contents

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Build
        run: cargo build --release

      - name: Create Release Directory
        shell: bash
        run: mkdir -p release

      - name: Rename Binaries
        shell: bash
        env:
          CRATE_NAME: glyph-hole-count
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            cp "target/release/$CRATE_NAME" "release/$CRATE_NAME-linux"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            cp "target/release/$CRATE_NAME.exe" "release/$CRATE_NAME-windows.exe"
          fi

      - name: Create Release
        id: create_release
        shell: bash
        run: |
          datetime=$(date -u '+%Y%m%d_%H%M%S')
          tag_name="nightly-${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}-${datetime}"
          release_name="Release nightly - ${datetime}"
          
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "release_name=${release_name}" >> $GITHUB_OUTPUT

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_release.outputs.tag_name }}
          release_name: ${{ steps.create_release.outputs.release_name }}
          draft: false
          prerelease: false
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Optional, but recommended for clarity